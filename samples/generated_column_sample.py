# Copyright 2024 Google LLC All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import uuid

from sqlalchemy import create_engine
from sqlalchemy.orm import Session

from sample_helper import run_sample
from model import Singer


# Shows how to use a generated column with SQLAlchemy and Spanner.
def generated_column_sample():
    engine = create_engine(
        "spanner:///projects/sample-project/"
        "instances/sample-instance/"
        "databases/sample-database",
        echo=True,
    )
    with Session(engine) as session:
        # The Singer model has a `full_name` property that is generated by the
        # database.
        singer = Singer(id=str(uuid.uuid4()), first_name="John", last_name="Doe")
        session.add(singer)
        session.commit()
        print(
            f"The database generated a full name for the singer: " f"{singer.full_name}"
        )

        # Updating the first name or last name of the singer will also update
        # the generated full name property.
        singer.last_name = "Jones"
        session.commit()
        print(f"Updated full name for singer: " f"{singer.full_name}")


if __name__ == "__main__":
    run_sample(generated_column_sample)
